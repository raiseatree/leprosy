<!---AJAX FileUploader for ColdFusionversion: 1.1.1feedback:  sid.maestre@designovermatter.com-----------update history----------------1.1.1 on 9/30/2010 by Martin Webb <martin[at]cubicstate.com>- Change function for Upload to returnformat equals JSON- local var scoping.1.1 on 9/9/2010 by Sid Maestre- Split Upload function to handle fallback uploads for browsers that don't support XHR data transfer---><cfcomponent hint="I handle AJAX File Uploads from Valum's AJAX file uploader library">	    <cffunction name="Upload" access="remote" output="false" returntype="any" returnformat="JSON">		<cfargument name="qqfile" type="string" required="true">		<cfset var local = structNew()>		<cfset local.response = structNew()>		<cfset local.requestData = GetHttpRequestData()>		<!--- check if XHR data exists --->        <cfif len(local.requestData.content) GT 0>			<cfset local.response = UploadFileXhr(arguments.qqfile, local.requestData.content, cookie.galleryID)>       		<cfelse>		<!--- no XHR data process as standard form submission --->			<cfset local.response = UploadFileXhr(qqfile=arguments.qqfile, content=local.requestData.content, ID=cookie.galleryID)>    		<cfset local.response['success'] = true>    		<cfset local.response['type'] = 'form'>		</cfif>				<cfreturn local.response>	</cffunction>        <cffunction name="UploadFileXhr" access="private" output="false" returntype="struct">		<cfargument name="qqfile" type="string" required="true">		<cfargument name="content" type="any" required="true">		<cfargument name="ID" type="numeric" required="true">		<cfset var local = structNew()>		<cfset local.response = structNew()>        <!--- write the contents of the http request to a file. The filename is passed with the qqfile variable --->		<cfset dir = ExpandPath('#ARGUMENTS.ID#')>								<!--- Check if the gallery we're uploading to exists --->		<cfif Not(DirectoryExists(dir))>			<cfset DirectoryCreate(dir)>		</cfif>				<!--- Now upload the file --->		<cffile action="write" file="#dir#/#ARGUMENTS.qqfile#" output="#ARGUMENTS.content#" />					<!--- Read the image to get whether it's landscape or portrait --->		<cfimage action="read" source="#dir#/#ARGUMENTS.qqfile#" name="loc.img" />		<!--- Work out the mode --->		<cfif ImageGetWidth(loc.img) GT ImageGetHeight(loc.img)>										<!--- Resize the file and create a thumbnail --->			<cfimage source="#dir#/#ARGUMENTS.qqfile#" destination="#dir#/#ARGUMENTS.qqfile#" action="resize" width="550" height="" overwrite="true">					<cfelse>						<!--- Resize the file and create a thumbnail --->			<cfimage source="#dir#/#ARGUMENTS.qqfile#" destination="#dir#/#ARGUMENTS.qqfile#" action="resize" width="" height="360" overwrite="true">							</cfif>				<!--- if you want to return some JSON you can do it here.  		I'm just passing a success message	--->    	<cfset local.response['success'] = true>    	<cfset local.response['type'] = 'xhr'>				<cfreturn local.response>    </cffunction>    </cfcomponent>